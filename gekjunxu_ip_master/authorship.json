[{"path":".github/workflows/gradle.yml","fileType":"yml","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"name: Java CI","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"on: [push, pull_request]","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"jobs:","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"  build:","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"    strategy:","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"      matrix:","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"        platform: [ubuntu-latest, macos-latest, windows-latest]","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"    runs-on: ${{ matrix.platform }}","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"    steps:","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"      - name: Set up repository","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"        uses: actions/checkout@master","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"      - name: Set up repository","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"        uses: actions/checkout@master","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"        with:","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"          ref: master","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"      - name: Merge to master","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"        run: git checkout --progress --force ${{ github.sha }}","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"      - name: Validate Gradle Wrapper","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"        uses: gradle/wrapper-validation-action@v1","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"      - name: Setup JDK 17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"        uses: actions/setup-java@v1","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"        with:","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"          java-version: \u002717\u0027","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"          java-package: jdk+fx","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"      - name: Build and check with Gradle","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"        run: ./gradlew check","isFullCredit":false}],"authorContributionMap":{"gekjunxu":34}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"# **üìå Bob User Guide**  ","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"\u003cimg width\u003d\"204\" alt\u003d\"Ui\" src\u003d\"https://github.com/user-attachments/assets/b6554ef1-7b92-4b00-bca5-3af74b66b29b\" /\u003e  ","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"Welcome to **Bob the Chat Bot**! Bob helps you **keep track of tasks, deadlines, and events** effortlessly.  ","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"## **‚ö° Features**  ","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"- ‚úÖ Add **To-Do** tasks  ","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"- üìÖ Manage **Deadlines**  ","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"- üéâ Track **Events**  ","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"- üìñ View and manage your task list  ","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"- üíæ **Data persistence** ‚Äì your tasks are saved automatically!  ","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"## **üìù Adding a To-Do Task**  ","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"A To-Do task is a simple task without any specific date/time.  ","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"todo \u003ctask description\u003e","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"todo sleep","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"## **üìÜ Adding a Deadline**  ","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"A deadline is a task that must be completed before a specific time.  ","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"deadline \u003ctask description\u003e /by \u003cdeadline date/time\u003e","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"deadline do homework /by tonight 10pm","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"\u003e ‚ÑπÔ∏è for information on supported date formats, see the corresponding [section](#-supported-date-formats) below","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"## **üìÖ Adding an Event**  ","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gekjunxu"},"content":"An event is a task that has a specific **start and end** date/time.  ","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gekjunxu"},"content":"event \u003cevent description\u003e /from \u003cevent start date/time\u003e /to \u003cevent end date/time\u003e","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gekjunxu"},"content":"event CS2103T meeting /from Friday 3pm /to Friday 4pm","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gekjunxu"},"content":"\u003e ‚ÑπÔ∏è for information on supported date formats, see the corresponding [section](#-supported-date-formats) below","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gekjunxu"},"content":"## **üìú Viewing Your Task List**  ","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gekjunxu"},"content":"To **see all tasks** in your list, use:  ","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gekjunxu"},"content":"list","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gekjunxu"},"content":"## **‚úÖ Marking a Task as Done**  ","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gekjunxu"},"content":"Once you finish a task, mark it as done.  ","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gekjunxu"},"content":"mark \u003ctask number\u003e","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gekjunxu"},"content":"mark 1","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gekjunxu"},"content":"## **‚Ü©Ô∏è Unmarking a Task as Done**  ","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gekjunxu"},"content":"If you accidentally marked a task wrongly, you can unmark the task as done.","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"```","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gekjunxu"},"content":"unmark \u003ctask number\u003e","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gekjunxu"},"content":"unmark 1","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gekjunxu"},"content":"## **‚ùå Deleting a Task**  ","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gekjunxu"},"content":"To remove a task from your list, use:  ","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gekjunxu"},"content":"delete \u003ctask number\u003e","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gekjunxu"},"content":"delete 2","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gekjunxu"},"content":"## **üîç Finding Tasks by Keyword**  ","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gekjunxu"},"content":"Search for tasks by keyword.  ","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gekjunxu"},"content":"find \u003ckeyword\u003e","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gekjunxu"},"content":"find meeting","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gekjunxu"},"content":"\u003e ‚ÑπÔ∏è the find function returns any corresponding matches, it does not have to be the full word. Even a letter can be used to find corresponding tasks containing that letter.","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gekjunxu"},"content":"## **üì§ Saving \u0026 Exiting**  ","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gekjunxu"},"content":"Bob **automatically saves your tasks** when you exit.  ","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gekjunxu"},"content":"bye","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gekjunxu"},"content":"\u003e Alternatively, simply close the window by presing \u0027X\u0027 on the top right corner. ","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gekjunxu"},"content":"\u003cbr\u003e","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gekjunxu"},"content":"## **üìå Additional Features**  ","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gekjunxu"},"content":"### **üìÇ Data Persistence**  ","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gekjunxu"},"content":"Bob **saves your tasks automatically** to `data/bob.txt`. When you reopen Bob, your tasks will be restored.  ","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gekjunxu"},"content":"### **üìå Supported Date Formats**  ","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gekjunxu"},"content":"You can use various date formats such as:  ","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gekjunxu"},"content":"- `yyyy-MM-dd` ‚Üí `2025-02-17`  ","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gekjunxu"},"content":"- `dd/MM/yyyy HH:mm` ‚Üí `17/02/2025 22:00`  ","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gekjunxu"},"content":"- Natural language ‚Üí `\"next Friday\"`, `\"tomorrow 6pm\"`","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gekjunxu"},"content":"\u003e ‚ÑπÔ∏è if the time is not specified, it will set it as the current time you added the task, on the date you entered. \u003cbr\u003e","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gekjunxu"},"content":"\u003e ‚ö†Ô∏è some dates, especially in natural language may be inferred wrongly, especially if the date is not a valid day of the month. Bob will still try to infer which date you are referring to, but it can get it wrong. If the date inferred is incorrect, simply delete and add the task again using a different date format.","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gekjunxu"},"content":"\u003cbr\u003e","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gekjunxu"},"content":"## **üöÄ Getting Started**  ","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gekjunxu"},"content":"### **üì¶ Installation**  ","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gekjunxu"},"content":"1. Download `Bob.jar` from the [Releases](https://github.com/gekjunxu/ip/releases) page.  ","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gekjunxu"},"content":"2. Simply double click to run and start adding tasks! üéâ  ","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"gekjunxu"},"content":"\u003cbr\u003e","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"gekjunxu"},"content":"\u003e _**Note:** This documentation was generated with assistance from ChatGPT for better styling._","isFullCredit":false}],"authorContributionMap":{"gekjunxu":168,"-":7}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"    id \u0027checkstyle\u0027","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"checkstyle {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"    toolVersion \u003d \u002710.2\u0027","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"    implementation group: \u0027com.joestelmach\u0027, name: \u0027natty\u0027, version: \u00270.13\u0027","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gekjunxu"},"content":"    mainClass.set(\"bob.ui.Launcher\")","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gekjunxu"},"content":"    archiveBaseName \u003d \"Bob\"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gekjunxu"},"content":"    enableAssertions \u003d true","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":26,"-":39}},{"path":"config/checkstyle/checkstyle.xml","fileType":"xml","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"\u003c!DOCTYPE module PUBLIC","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"\u003c!--","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"    This configuration file enforces rules for the coding standard at","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"--\u003e","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"  \u003c/module\u003e","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"  \u003c/module\u003e","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"  \u003c/module\u003e","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"  \u003c/module\u003e","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"  \u003c/module\u003e","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"    \u003c!--","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gekjunxu"},"content":"    IMPORT CHECKS","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gekjunxu"},"content":"    --\u003e","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gekjunxu"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gekjunxu"},"content":"      1. STATIC: static imports","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gekjunxu"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gekjunxu"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gekjunxu"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gekjunxu"},"content":"    --\u003e","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gekjunxu"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gekjunxu"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gekjunxu"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gekjunxu"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gekjunxu"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks for redundant import statements.","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gekjunxu"},"content":"    An import statement is redundant if:","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gekjunxu"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gekjunxu"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gekjunxu"},"content":"      * The class non-statically imported is from the same package as the current package.","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gekjunxu"},"content":"    --\u003e","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks for unused import statements.","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gekjunxu"},"content":"    An import statement is unused if:","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gekjunxu"},"content":"      It\u0027s not referenced in the file.","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gekjunxu"},"content":"    --\u003e","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gekjunxu"},"content":"    \u003c!--","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gekjunxu"},"content":"    NAMING CHECKS","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gekjunxu"},"content":"    --\u003e","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gekjunxu"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gekjunxu"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gekjunxu"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gekjunxu"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gekjunxu"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gekjunxu"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gekjunxu"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gekjunxu"},"content":"    \u003c!--","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gekjunxu"},"content":"    LENGTH and CODING CHECKS","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gekjunxu"},"content":"    --\u003e","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gekjunxu"},"content":"      Java style: public static void main(String[] args) // Allowed","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gekjunxu"},"content":"      C style:    public static void main(String args[]) // Not allowed","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gekjunxu"},"content":"    --\u003e","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"gekjunxu"},"content":"      the same line. e.g., the following example is fine:","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"gekjunxu"},"content":"      \u003cpre\u003e","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"gekjunxu"},"content":"        if {","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"gekjunxu"},"content":"          ...","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"gekjunxu"},"content":"        } else","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"gekjunxu"},"content":"      \u003c/pre\u003e","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"gekjunxu"},"content":"      --\u003e","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- This next example is not fine:","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"gekjunxu"},"content":"      \u003cpre\u003e","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"gekjunxu"},"content":"        if {","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"gekjunxu"},"content":"          ...","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"gekjunxu"},"content":"        else","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"gekjunxu"},"content":"      \u003c/pre\u003e","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"gekjunxu"},"content":"      --\u003e","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"gekjunxu"},"content":"      \u003c!--","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"gekjunxu"},"content":"      if (true) return 1; // Not allowed","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"gekjunxu"},"content":"      if (true) { return 1; } // Not allowed","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"gekjunxu"},"content":"      else if {","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"gekjunxu"},"content":"        return 1; // else if should always be multi line","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"gekjunxu"},"content":"      }","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"gekjunxu"},"content":"      if (true)","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"gekjunxu"},"content":"        return 1; // Not allowed","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"gekjunxu"},"content":"      --\u003e","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"gekjunxu"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"gekjunxu"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"gekjunxu"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"gekjunxu"},"content":"      --\u003e","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"gekjunxu"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"gekjunxu"},"content":"    \u003c!--","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"gekjunxu"},"content":"    ORDER CHECKS","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"gekjunxu"},"content":"    --\u003e","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"gekjunxu"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"gekjunxu"},"content":"    --\u003e","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"gekjunxu"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"gekjunxu"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"gekjunxu"},"content":"      3. Constructors","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"gekjunxu"},"content":"      4. Methods","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"gekjunxu"},"content":"    --\u003e","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"gekjunxu"},"content":"           8.4.3.  The prescribed order is:","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"gekjunxu"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"gekjunxu"},"content":"           synchronized, native, strictfp","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"gekjunxu"},"content":"        --\u003e","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"gekjunxu"},"content":"    \u003c!--","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"gekjunxu"},"content":"    WHITESPACE CHECKS","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"gekjunxu"},"content":"    --\u003e","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"gekjunxu"},"content":"           This includes most binary operators and keywords followed","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"gekjunxu"},"content":"           by regular or curly braces.","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"gekjunxu"},"content":"      --\u003e","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"gekjunxu"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"gekjunxu"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"gekjunxu"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"gekjunxu"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"gekjunxu"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"gekjunxu"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"gekjunxu"},"content":"        UNARY_PLUS\"/\u003e","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- No trailing whitespace --\u003e","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"gekjunxu"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"gekjunxu"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"gekjunxu"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"gekjunxu"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"gekjunxu"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"gekjunxu"},"content":"             e.g. String::compareToIgnoreCase","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"gekjunxu"},"content":"      --\u003e","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"gekjunxu"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"gekjunxu"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"gekjunxu"},"content":"      --\u003e","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"gekjunxu"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"gekjunxu"},"content":"         a \u003d 1; // Allowed","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"gekjunxu"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"gekjunxu"},"content":"    --\u003e","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"gekjunxu"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"gekjunxu"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"gekjunxu"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"gekjunxu"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"gekjunxu"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"gekjunxu"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"gekjunxu"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"gekjunxu"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"gekjunxu"},"content":"      --\u003e","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"gekjunxu"},"content":"    \u003c!--","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"gekjunxu"},"content":"    JAVADOC CHECKS","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"gekjunxu"},"content":"    --\u003e","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"gekjunxu"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*|main)\"/\u003e","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"gekjunxu"},"content":"    \u003c/module\u003e","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"gekjunxu"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"gekjunxu"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"gekjunxu"},"content":"  \u003c/module\u003e","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"gekjunxu"},"content":"\u003c/module\u003e","isFullCredit":false}],"authorContributionMap":{"gekjunxu":434}},{"path":"config/checkstyle/suppressions.xml","fileType":"xml","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"\u003c?xml version\u003d\"1.0\"?\u003e","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"\u003c!DOCTYPE suppressions PUBLIC","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"    \"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"    \"https://checkstyle.org/dtds/suppressions_1_2.dtd\"\u003e","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"\u003csuppressions\u003e","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"  \u003csuppress checks\u003d\"JavadocType\" files\u003d\".*Test\\.java\"/\u003e","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"  \u003csuppress checks\u003d\"MissingJavadocMethodCheck\" files\u003d\".*Test\\.java\"/\u003e","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"\u003c/suppressions\u003e","isFullCredit":false}],"authorContributionMap":{"gekjunxu":10}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"# **üìå Bob User Guide**  ","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"\u003cimg width\u003d\"204\" alt\u003d\"Ui\" src\u003d\"https://github.com/user-attachments/assets/b6554ef1-7b92-4b00-bca5-3af74b66b29b\" /\u003e  ","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"Welcome to **Bob the Chat Bot**! Bob helps you **keep track of tasks, deadlines, and events** effortlessly.  ","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"## **‚ö° Features**  ","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"- ‚úÖ Add **To-Do** tasks  ","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"- üìÖ Manage **Deadlines**  ","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"- üéâ Track **Events**  ","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"- üìñ View and manage your task list  ","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"- üíæ **Data persistence** ‚Äì your tasks are saved automatically!  ","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"## **üìù Adding a To-Do Task**  ","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"A To-Do task is a simple task without any specific date/time.  ","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"todo \u003ctask description\u003e","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"todo sleep","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"## **üìÜ Adding a Deadline**  ","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"A deadline is a task that must be completed before a specific time.  ","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"deadline \u003ctask description\u003e /by \u003cdeadline date/time\u003e","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"deadline do homework /by tonight 10pm","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"\u003e ‚ÑπÔ∏è for information on supported date formats, see the corresponding [section](#-supported-date-formats) below","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"## **üìÖ Adding an Event**  ","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gekjunxu"},"content":"An event is a task that has a specific **start and end** date/time.  ","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gekjunxu"},"content":"event \u003cevent description\u003e /from \u003cevent start date/time\u003e /to \u003cevent end date/time\u003e","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gekjunxu"},"content":"event CS2103T meeting /from Friday 3pm /to Friday 4pm","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gekjunxu"},"content":"\u003e ‚ÑπÔ∏è for information on supported date formats, see the corresponding [section](#-supported-date-formats) below","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gekjunxu"},"content":"## **üìú Viewing Your Task List**  ","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gekjunxu"},"content":"To **see all tasks** in your list, use:  ","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gekjunxu"},"content":"list","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gekjunxu"},"content":"## **‚úÖ Marking a Task as Done**  ","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gekjunxu"},"content":"Once you finish a task, mark it as done.  ","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gekjunxu"},"content":"mark \u003ctask number\u003e","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gekjunxu"},"content":"mark 1","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gekjunxu"},"content":"## **‚Ü©Ô∏è Unmarking a Task as Done**  ","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gekjunxu"},"content":"If you accidentally marked a task wrongly, you can unmark the task as done.","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gekjunxu"},"content":"unmark \u003ctask number\u003e","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"```","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gekjunxu"},"content":"unmark 1","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"```","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gekjunxu"},"content":"## **‚ùå Deleting a Task**  ","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gekjunxu"},"content":"To remove a task from your list, use:  ","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gekjunxu"},"content":"delete \u003ctask number\u003e","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gekjunxu"},"content":"delete 2","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gekjunxu"},"content":"## **üîç Finding Tasks by Keyword**  ","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gekjunxu"},"content":"Search for tasks by keyword.  ","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gekjunxu"},"content":"find \u003ckeyword\u003e","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gekjunxu"},"content":"**Example:**  ","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gekjunxu"},"content":"find meeting","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gekjunxu"},"content":"\u003e ‚ÑπÔ∏è the find function returns any corresponding matches, it does not have to be the full word. Even a letter can be used to find corresponding tasks containing that letter.","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gekjunxu"},"content":"## **üì§ Saving \u0026 Exiting**  ","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gekjunxu"},"content":"Bob **automatically saves your tasks** when you exit.  ","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gekjunxu"},"content":"**Command:**  ","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gekjunxu"},"content":"bye","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gekjunxu"},"content":"```","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gekjunxu"},"content":"\u003e Alternatively, simply close the window by presing \u0027X\u0027 on the top right corner. ","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gekjunxu"},"content":"\u003cbr\u003e","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gekjunxu"},"content":"## **üìå Additional Features**  ","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gekjunxu"},"content":"### **üìÇ Data Persistence**  ","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gekjunxu"},"content":"Bob **saves your tasks automatically** to `data/bob.txt`. When you reopen Bob, your tasks will be restored.  ","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gekjunxu"},"content":"### **üìå Supported Date Formats**  ","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gekjunxu"},"content":"You can use various date formats such as:  ","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gekjunxu"},"content":"- `yyyy-MM-dd` ‚Üí `2025-02-17`  ","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gekjunxu"},"content":"- `dd/MM/yyyy HH:mm` ‚Üí `17/02/2025 22:00`  ","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gekjunxu"},"content":"- Natural language ‚Üí `\"next Friday\"`, `\"tomorrow 6pm\"`","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gekjunxu"},"content":"\u003e ‚ÑπÔ∏è if the time is not specified, it will set it as the current time you added the task, on the date you entered. \u003cbr\u003e","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gekjunxu"},"content":"\u003e ‚ö†Ô∏è some dates, especially in natural language may be inferred wrongly, especially if the date is not a valid day of the month. Bob will still try to infer which date you are referring to, but it can get it wrong. If the date inferred is incorrect, simply delete and add the task again using a different date format.","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gekjunxu"},"content":"\u003cbr\u003e","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gekjunxu"},"content":"## **üöÄ Getting Started**  ","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gekjunxu"},"content":"### **üì¶ Installation**  ","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gekjunxu"},"content":"1. Download `Bob.jar` from the [Releases](https://github.com/gekjunxu/ip/releases) page.  ","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gekjunxu"},"content":"2. Simply double click to run and start adding tasks! üéâ  ","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"gekjunxu"},"content":"---","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"gekjunxu"},"content":"\u003cbr\u003e","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"gekjunxu"},"content":"\u003e _**Note:** This documentation was generated with assistance from ChatGPT for better styling._","isFullCredit":false}],"authorContributionMap":{"gekjunxu":156,"-":19}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"import java.time.LocalDateTime;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"import bob.command.Parser;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"import bob.exception.BobException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"import bob.storage.Storage;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"import bob.task.Deadline;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"import bob.task.Event;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"import bob.task.TaskList;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"import bob.task.Todo;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"import bob.ui.Ui;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":" * The main class for the Bob Chatbot.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"public class Bob {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"    private Storage storage;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"    private TaskList taskList;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"    private Ui ui;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"    private boolean isDatafileFound \u003d false;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"     * Constructor for Bob, checks for existing data file and processes it,","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"     * creates one if not found.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"     * @param filePath The path to the data file.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"    public Bob(String filePath) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"        // Initialise bob.Ui","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"        this.ui \u003d new Ui();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"        // Initialise storage","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"        this.storage \u003d new Storage(filePath);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"        try {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"            if (!storage.directoryExists()) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"                storage.createDirectory();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"                // Initialise empty task list","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"                taskList \u003d new TaskList();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"            } else {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"                // If file already exists, import into taskList with overloaded constructor","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"                taskList \u003d new TaskList(storage.loadTasks());","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gekjunxu"},"content":"                isDatafileFound \u003d true;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gekjunxu"},"content":"            }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gekjunxu"},"content":"        } catch (BobException | IOException e) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gekjunxu"},"content":"            ui.showDataFileError();","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gekjunxu"},"content":"            taskList \u003d new TaskList();","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gekjunxu"},"content":"     * Executes the main running logic for Bob.","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gekjunxu"},"content":"     * @throws BobException if issues with user input.","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gekjunxu"},"content":"     * @throws IOException  if encounters issue with writing data file.","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gekjunxu"},"content":"    public String run(String rawInput) throws BobException, IOException {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gekjunxu"},"content":"        // Check data file present or not, creates one if not present","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gekjunxu"},"content":"        Storage storage \u003d new Storage(\"data/bob.txt\");","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gekjunxu"},"content":"        // Print hello message","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gekjunxu"},"content":"        ui.printHelloMessage();","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gekjunxu"},"content":"        // Split components of input to find first command word","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gekjunxu"},"content":"        String[] input \u003d rawInput.split(\" \", 2);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gekjunxu"},"content":"        switch (input[0]) {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gekjunxu"},"content":"        case \"list\":","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gekjunxu"},"content":"            return listOutTasks(input);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gekjunxu"},"content":"        case \"unmark\":","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gekjunxu"},"content":"            return unmarkTask(input);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gekjunxu"},"content":"        case \"mark\":","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gekjunxu"},"content":"            return markTask(input);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gekjunxu"},"content":"        case \"deadline\":","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gekjunxu"},"content":"            return deadlineTask(input);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gekjunxu"},"content":"        case \"event\":","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gekjunxu"},"content":"            return eventTask(input);","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gekjunxu"},"content":"        case \"todo\":","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gekjunxu"},"content":"            return todoTask(input);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gekjunxu"},"content":"        case \"delete\":","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gekjunxu"},"content":"            return deleteTask(input);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gekjunxu"},"content":"        case \"find\":","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gekjunxu"},"content":"            return findTask(input);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gekjunxu"},"content":"        case \"bye\":","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gekjunxu"},"content":"            return byeTask();","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gekjunxu"},"content":"        default:","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gekjunxu"},"content":"            // Invalid input, throw exception","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"\"\"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gekjunxu"},"content":"                    Bob doesn\u0027t recognise this, please try again","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gekjunxu"},"content":"                    Usage:\\s","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gekjunxu"},"content":"                    1. todo \u003cdescription\u003e \\s","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gekjunxu"},"content":"                    2. deadline \u003cdescription\u003e /by \u003cdeadline\u003e","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gekjunxu"},"content":"                    3. event \u003cdescription\u003e \\","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gekjunxu"},"content":"                    /from \u003cstart time\u003e /to \u003cend time\u003e","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gekjunxu"},"content":"                    4. list","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gekjunxu"},"content":"                    5. mark \u003ctask number\u003e","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gekjunxu"},"content":"                    6. unmark \u003ctask number\u003e","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gekjunxu"},"content":"                    7. delete \u003ctask number\u003e\"\"\");","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gekjunxu"},"content":"     * Saves tasks to file before closing the program.","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gekjunxu"},"content":"     * @return message to say bye to the user.","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gekjunxu"},"content":"     * @throws IOException if issue occurs when saving file.","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gekjunxu"},"content":"    private String byeTask() throws IOException {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gekjunxu"},"content":"        // Write lists to file before exit","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gekjunxu"},"content":"        saveTasksToFile();","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gekjunxu"},"content":"        // Close the bot when user types bye","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gekjunxu"},"content":"        // Say bye message when user types bye","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gekjunxu"},"content":"        return ui.printByeMessage();","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gekjunxu"},"content":"     * Marks a task as not done.","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gekjunxu"},"content":"     * @param input The user input containing the task number.","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gekjunxu"},"content":"     * @return A message indicating the task has been unmarked.","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gekjunxu"},"content":"     * @throws BobException If the input is invalid or the task number is out of range.","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gekjunxu"},"content":"    private String unmarkTask(String[] input) throws BobException {","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gekjunxu"},"content":"        if (input.length \u003c 2) {","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"Your command is missing a number to unmark\");","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gekjunxu"},"content":"        } else if (input[1].isEmpty() || !input[1].matches(\"-?\\\\d+\")) {","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"Your command is missing a number to unmark\");","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gekjunxu"},"content":"        int index \u003d Integer.parseInt(input[1]) - 1;","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gekjunxu"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"No such task number\");","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gekjunxu"},"content":"        taskList.get(index).unMarkDone();","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gekjunxu"},"content":"        return ui.printMarkedTaskUndone() + taskList.get(index).toString();","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gekjunxu"},"content":"     * Marks a task as done.","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gekjunxu"},"content":"     * @param input The user input containing the task number.","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gekjunxu"},"content":"     * @return A message indicating the task has been marked as done.","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gekjunxu"},"content":"     * @throws BobException If the input is invalid or the task number is out of range.","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gekjunxu"},"content":"    private String markTask(String[] input) throws BobException {","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gekjunxu"},"content":"        // Throw exception if no number given","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gekjunxu"},"content":"        if (input.length \u003c 2) {","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"Your command is missing a number to mark\");","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gekjunxu"},"content":"        } else if (input[1].isEmpty() || !input[1].matches(\"-?\\\\d+\")) {","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"Your command is missing a number to mark\");","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gekjunxu"},"content":"        int index \u003d Integer.parseInt(input[1]) - 1;","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gekjunxu"},"content":"        // Handle invalid input","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gekjunxu"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"No such task number, try again\");","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gekjunxu"},"content":"        taskList.get(index).markDone();","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gekjunxu"},"content":"        return ui.printMarkedTaskDone() + taskList.get(index).toString();","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"gekjunxu"},"content":"     * Adds an event task to the task list.","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"gekjunxu"},"content":"     * @param input The user input containing the task description and event duration.","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"gekjunxu"},"content":"     * @return A message confirming the task has been added.","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"gekjunxu"},"content":"     * @throws BobException If the input format is incorrect or date parsing fails.","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"gekjunxu"},"content":"    private String eventTask(String[] input) throws BobException {","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"gekjunxu"},"content":"        if (input[1].isEmpty()) {","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"Task description is empty, please try again\");","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"gekjunxu"},"content":"        String[] eventSplit \u003d input[1].split(\"/from \");","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"gekjunxu"},"content":"        String description \u003d eventSplit[0];","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"gekjunxu"},"content":"        String[] durationSplit \u003d eventSplit[1].split(\" /to \");","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"gekjunxu"},"content":"        String from \u003d durationSplit[0];","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"gekjunxu"},"content":"        LocalDateTime fromDate \u003d Parser.parseDate(from);","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"gekjunxu"},"content":"        if (fromDate \u003d\u003d null) {","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"From date/time format is wrong, please try again.\");","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"gekjunxu"},"content":"        String to \u003d durationSplit[1];","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"gekjunxu"},"content":"        LocalDateTime toDate \u003d Parser.parseDate(to);","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"gekjunxu"},"content":"        if (toDate \u003d\u003d null) {","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"To date/time format is wrong, please try again.\");","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"gekjunxu"},"content":"        taskList.addTask(new Event(description, fromDate, toDate));","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"gekjunxu"},"content":"        String taskString \u003d taskList.get(taskList.size() - 1).toString();","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"gekjunxu"},"content":"        int numberOfTasks \u003d taskList.size();","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"gekjunxu"},"content":"        return ui.printAddedTaskMessage(taskString, numberOfTasks);","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"gekjunxu"},"content":"     * Adds a todo task to the task list.","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"gekjunxu"},"content":"     * @param input The user input containing the task description.","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"gekjunxu"},"content":"     * @return A message confirming the task has been added.","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"gekjunxu"},"content":"     * @throws BobException If the task description is missing.","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"gekjunxu"},"content":"    private String todoTask(String[] input) throws BobException {","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"gekjunxu"},"content":"        if (input.length \u003c 2) {","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"Task description is empty, please try again\");","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"gekjunxu"},"content":"        } else if (input[1].isEmpty()) {","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"Task description is empty, please try again\");","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"gekjunxu"},"content":"        taskList.addTask(new Todo(input[1]));","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"gekjunxu"},"content":"        String taskString \u003d taskList.get(taskList.size() - 1).toString();","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"gekjunxu"},"content":"        int numberOfTasks \u003d taskList.size();","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"gekjunxu"},"content":"        return ui.printAddedTaskMessage(taskString, numberOfTasks);","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"gekjunxu"},"content":"     * Deletes a task from the task list.","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"gekjunxu"},"content":"     * @param input The user input containing the task number.","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"gekjunxu"},"content":"     * @return A message confirming the task has been deleted.","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"gekjunxu"},"content":"     * @throws BobException If the input is invalid or the task number is out of range.","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"gekjunxu"},"content":"    private String deleteTask(String[] input) throws BobException {","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"gekjunxu"},"content":"        // Handle case where incorrect number of arguments given","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"gekjunxu"},"content":"        if (input.length !\u003d 2) {","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"            throw new BobException(\"Incorrect number of arguments\");","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"gekjunxu"},"content":"        int index \u003d Integer.parseInt(input[1]) - 1;","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"gekjunxu"},"content":"        // Handle case when task number not found","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"gekjunxu"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"No such task number\");","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"gekjunxu"},"content":"        taskList.deleteTask(index);","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"gekjunxu"},"content":"        return ui.printDeletedTaskMessage(taskList.size());","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"gekjunxu"},"content":"     * Finds tasks in the task list matching a keyword.","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"gekjunxu"},"content":"     * @param input The user input containing the search keyword.","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"gekjunxu"},"content":"     * @return A message listing the found tasks.","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"gekjunxu"},"content":"     * @throws BobException If the input format is incorrect.","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"gekjunxu"},"content":"    private String findTask(String[] input) throws BobException {","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"gekjunxu"},"content":"        if (input.length \u003c 2) {","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"Incorrect number of arguments\");","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"gekjunxu"},"content":"        String toFind \u003d input[1];","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"gekjunxu"},"content":"        TaskList foundTasks \u003d taskList.findTasks(toFind);","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"gekjunxu"},"content":"        return ui.printFoundTasks() + foundTasks.listTasks();","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"gekjunxu"},"content":"     * Adds a deadline task to the task list.","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"gekjunxu"},"content":"     * @param input The user input containing the task description and deadline.","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"gekjunxu"},"content":"     * @return A message confirming the task has been added.","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"gekjunxu"},"content":"     * @throws BobException If the input format is incorrect or date parsing fails.","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"gekjunxu"},"content":"    private String deadlineTask(String[] input) throws BobException {","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"gekjunxu"},"content":"        if (input.length \u003c 2) {","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"Your command is incorrect, try again.\");","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"gekjunxu"},"content":"        // Index 0 is before /by, index 1 is after /by","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"gekjunxu"},"content":"        String[] deadlineSplit \u003d input[1].split(\"/by \");","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"gekjunxu"},"content":"        if (deadlineSplit.length \u003c 2) {","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"Your command is incorrect, try again.\");","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"gekjunxu"},"content":"        String description \u003d deadlineSplit[0];","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"gekjunxu"},"content":"        String deadline \u003d deadlineSplit[1];","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"gekjunxu"},"content":"        LocalDateTime deadlineDate \u003d Parser.parseDate(deadline);","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"gekjunxu"},"content":"        if (deadlineDate \u003d\u003d null) {","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"Deadline date format is wrong, please try again.\");","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"gekjunxu"},"content":"        taskList.addTask(new Deadline(description, deadlineDate));","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"gekjunxu"},"content":"        String taskString \u003d taskList.get(taskList.size() - 1).toString();","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"gekjunxu"},"content":"        int numberOfTasks \u003d taskList.size();","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"gekjunxu"},"content":"        return ui.printAddedTaskMessage(taskString, numberOfTasks);","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"gekjunxu"},"content":"     * Lists all tasks in the task list.","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"gekjunxu"},"content":"     * @param input The user input (should contain no extra arguments).","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"gekjunxu"},"content":"     * @return A message listing all tasks.","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"gekjunxu"},"content":"     * @throws BobException If extra arguments are provided or the task list is empty.","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"gekjunxu"},"content":"    private String listOutTasks(String[] input) throws BobException {","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"gekjunxu"},"content":"        if (input.length \u003e 1) {","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"Too many arguments\");","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"gekjunxu"},"content":"        } else if (taskList.isEmpty()) {","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"There are no items in the list\");","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"gekjunxu"},"content":"        } else {","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"gekjunxu"},"content":"            return ui.printTaskInListMessage() + taskList.listTasks();","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"gekjunxu"},"content":"     * Generates a response for the user\u0027s chat message.","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"gekjunxu"},"content":"    public String getResponse(String rawInput) {","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"gekjunxu"},"content":"        assert rawInput !\u003d null;","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"gekjunxu"},"content":"        try {","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"gekjunxu"},"content":"            return this.run(rawInput);","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"gekjunxu"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"gekjunxu"},"content":"            return ui.showDataFileError();","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"gekjunxu"},"content":"        } catch (BobException e) {","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"gekjunxu"},"content":"            return e.getMessage();","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"gekjunxu"},"content":"     * Returns startup message for the bot.","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"gekjunxu"},"content":"     * @return message with datafile created message if datafile not found, or just hello message otherwise.","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"gekjunxu"},"content":"    public String getStartupMessage() {","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"gekjunxu"},"content":"        return isDatafileFound ? ui.printHelloMessage() : ui.printDatafileNotFoundMessage() + ui.printHelloMessage();","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"gekjunxu"},"content":"     * Saves task to file.","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"gekjunxu"},"content":"     * @throws IOException for any issues writing back to file.","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"gekjunxu"},"content":"    public void saveTasksToFile() throws IOException {","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"gekjunxu"},"content":"        storage.writeTasksToFile(taskList);","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":339,"-":5}},{"path":"src/main/java/bob/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.command;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import java.time.LocalDateTime;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"import java.time.ZoneId;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"import java.util.Date;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"import bob.exception.BobException;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"import bob.task.Deadline;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"import bob.task.Event;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"import bob.task.Task;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"import bob.task.Todo;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":" * Handles parsing operations.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":" * This class is responsible for operations where input parsing is required,","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":" * such as reading tasks from the saved file, and processing the dates","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":" * from String to a LocalDateTime format.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"public class Parser {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"     * Parses a line in datafile into the task.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"     * @param line The input line to be parsed.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"     * @return Task The task that has been parsed.","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"     * @throws BobException If the task in the line is unknown and cannot be parsed.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"    public static Task parseTask(String line) throws BobException {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"        char taskType \u003d line.charAt(1); // Extract task type from formatted string","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"        boolean isDone \u003d line.charAt(4) \u003d\u003d \u0027X\u0027; // Determine if the task is marked done","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"        switch (taskType) {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"        case \u0027T\u0027:","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"            return parseTodoTask(line, isDone);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"        case \u0027D\u0027:","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"            return parseDeadlineTask(line, isDone);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"        case \u0027E\u0027:","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"            return parseEventTask(line, isDone);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"        default:","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"            throw new BobException(\"Unknown task type in file: \" + line);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"     * Parses an event task from a line of the saved data file.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gekjunxu"},"content":"     * @param line   The line containing event task details.","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gekjunxu"},"content":"     * @param isDone Whether the event is marked as done.","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gekjunxu"},"content":"     * @return The parsed Event object.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gekjunxu"},"content":"    private static Event parseEventTask(String line, boolean isDone) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gekjunxu"},"content":"        String[] parts \u003d line.substring(7).split(\" \\\\(from: \");","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gekjunxu"},"content":"        String description \u003d parts[0];","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gekjunxu"},"content":"        String[] timeParts \u003d parts[1].split(\" to: \");","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gekjunxu"},"content":"        String from \u003d timeParts[0];","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gekjunxu"},"content":"        LocalDateTime fromDate \u003d parseDate(from);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gekjunxu"},"content":"        String[] toParts \u003d timeParts[1].split(\"\\\\)\");","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gekjunxu"},"content":"        String to \u003d toParts[0];","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gekjunxu"},"content":"        LocalDateTime toDate \u003d parseDate(to);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gekjunxu"},"content":"        Event event \u003d new Event(description, fromDate, toDate);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gekjunxu"},"content":"        if (isDone) {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gekjunxu"},"content":"            event.markDone();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gekjunxu"},"content":"        return event;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gekjunxu"},"content":"     * Parses a deadline task from a line of the saved data file.","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gekjunxu"},"content":"     * @param line   The line containing deadline task details.","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gekjunxu"},"content":"     * @param isDone Whether the deadline is marked as done.","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gekjunxu"},"content":"     * @return The parsed Deadline object.","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gekjunxu"},"content":"    private static Deadline parseDeadlineTask(String line, boolean isDone) {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gekjunxu"},"content":"        String[] parts \u003d line.substring(7).split(\" \\\\(by: \");","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gekjunxu"},"content":"        String description \u003d parts[0];","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gekjunxu"},"content":"        String[] deadlineParts \u003d parts[1].split(\"\\\\)\");","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gekjunxu"},"content":"        String deadline \u003d deadlineParts[0];","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gekjunxu"},"content":"        LocalDateTime deadlineDate \u003d parseDate(deadline);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gekjunxu"},"content":"        Deadline deadlineTask \u003d new Deadline(description, deadlineDate);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gekjunxu"},"content":"        if (isDone) {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gekjunxu"},"content":"            deadlineTask.markDone();","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gekjunxu"},"content":"        return deadlineTask;","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gekjunxu"},"content":"     * Parses a todo task from a line of the saved data file.","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gekjunxu"},"content":"     * @param line   The line containing todo task details.","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gekjunxu"},"content":"     * @param isDone Whether the todo is marked as done.","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gekjunxu"},"content":"     * @return The parsed Todo object.","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gekjunxu"},"content":"    private static Todo parseTodoTask(String line, boolean isDone) {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gekjunxu"},"content":"        String description \u003d line.substring(7); // Extract description","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gekjunxu"},"content":"        Todo todo \u003d new Todo(description);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gekjunxu"},"content":"        if (isDone) {","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gekjunxu"},"content":"            todo.markDone();","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gekjunxu"},"content":"        return todo;","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gekjunxu"},"content":"     * Parses a date in String format to a LocalDateTime.","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gekjunxu"},"content":"     * @param date The date to be parsed in String.","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gekjunxu"},"content":"     * @return The LocalDateTime object corresponding to the input date in String format,","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gekjunxu"},"content":"     *      returns null if the date cannot be parsed.","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gekjunxu"},"content":"    public static LocalDateTime parseDate(String date) {","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gekjunxu"},"content":"        // Syntax assisted by ChatGPT, developer documentation page not loading.","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gekjunxu"},"content":"        if (date \u003d\u003d null || date.trim().isEmpty()) {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gekjunxu"},"content":"            return null; // Reject empty input","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gekjunxu"},"content":"        com.joestelmach.natty.Parser nattyParser \u003d new com.joestelmach.natty.Parser();","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gekjunxu"},"content":"        List\u003ccom.joestelmach.natty.DateGroup\u003e groups \u003d nattyParser.parse(date);","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gekjunxu"},"content":"        if (groups.isEmpty() || groups.get(0).getDates().isEmpty()) {","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gekjunxu"},"content":"            return null;","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gekjunxu"},"content":"        // Get the first parsed date result","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gekjunxu"},"content":"        Date parsedDate \u003d groups.get(0).getDates().get(0);","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gekjunxu"},"content":"        // Convert to LocalDateTime","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gekjunxu"},"content":"        return parsedDate.toInstant()","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gekjunxu"},"content":"                .atZone(ZoneId.systemDefault())","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gekjunxu"},"content":"                .toLocalDateTime();","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":134}},{"path":"src/main/java/bob/exception/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.exception;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":" * Represents exceptions for the Bob chatbot.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"public class BobException extends Exception {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"     * Creates a new BobException instance.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"     * @param message the message of the thrown exception.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"    public BobException(String message) {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"        super(message);","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":17}},{"path":"src/main/java/bob/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import java.io.BufferedReader;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"import java.io.BufferedWriter;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"import java.io.File;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"import java.io.FileReader;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"import java.io.FileWriter;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"import java.nio.file.Files;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"import java.nio.file.Paths;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"import bob.command.Parser;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"import bob.exception.BobException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"import bob.task.Task;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"import bob.task.TaskList;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":" * Handles loading and saving tasks to a file.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":" * This class is responsible for managing file operations such as reading tasks from a file,","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":" * writing tasks to a file, and ensuring the required storage directory exists.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"public class Storage {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"    protected Path filePath;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"     * Creates a Storage instance with the specified file path.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"     * @param filePath The path to the storage file.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"    public Storage(String filePath) {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"        assert filePath !\u003d null;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"        this.filePath \u003d Paths.get(filePath);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"     * Checks if the storage file exists.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"     * @return {@code true} if the file exists, {@code false} otherwise.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"    public boolean directoryExists() {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"        return Files.exists(filePath);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gekjunxu"},"content":"     * Creates the necessary directory and storage file if they do not exist.","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gekjunxu"},"content":"     * @throws IOException If an I/O error occurs while creating the directory or file.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gekjunxu"},"content":"    public void createDirectory() throws IOException {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gekjunxu"},"content":"        Files.createDirectories(filePath.getParent());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gekjunxu"},"content":"        Files.createFile(filePath);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gekjunxu"},"content":"     * Loads tasks from the storage file.","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gekjunxu"},"content":"     * @return A list of tasks read from the file.","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gekjunxu"},"content":"     * @throws IOException  If an I/O error occurs while reading the file.","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gekjunxu"},"content":"     * @throws BobException If the file contains an invalid task format.","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gekjunxu"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException, BobException {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gekjunxu"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gekjunxu"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(filePath.toFile()));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gekjunxu"},"content":"        String line;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gekjunxu"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gekjunxu"},"content":"            Task task \u003d Parser.parseTask(line); // Parse each line into a Task","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gekjunxu"},"content":"            tasks.add(task);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gekjunxu"},"content":"        reader.close();","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gekjunxu"},"content":"        return tasks;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gekjunxu"},"content":"     * Writes the given task list to the storage file.","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gekjunxu"},"content":"     * @param taskList The list of tasks to be written to the file.","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gekjunxu"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gekjunxu"},"content":"    public void writeTasksToFile(TaskList taskList) throws IOException {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gekjunxu"},"content":"        assert taskList !\u003d null : \"TaskList should not be null\";","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gekjunxu"},"content":"        File file \u003d filePath.toFile();","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gekjunxu"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gekjunxu"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gekjunxu"},"content":"            writer.write(taskList.get(i).toString());","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gekjunxu"},"content":"            writer.newLine();","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gekjunxu"},"content":"        writer.close();","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":93}},{"path":"src/main/java/bob/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.task;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import java.time.LocalDateTime;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"import java.time.format.DateTimeFormatter;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":" * Represents a class with a deadline.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":" *","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":" * @see bob.task.Task","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"public class Deadline extends Task {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"    protected LocalDateTime by;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"     * Creates a new instance of a deadline task.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"     * @param description of the task.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"     * @param by          The deadline of the task.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"    public Deadline(String description, LocalDateTime by) {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"        super(description);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"        assert by !\u003d null : \"Deadline should have a valid by\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"        this.by \u003d by;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"    @Override","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":33}},{"path":"src/main/java/bob/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.task;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import java.time.LocalDateTime;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"import java.time.format.DateTimeFormatter;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":" * Represents a task with a description, start and end date and time.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":" *","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":" * @see bob.task.Task","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"public class Event extends Task {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"    protected LocalDateTime to;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"    protected LocalDateTime from;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"     * Creates a new Event task instance.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"     * @param description of the event.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"     * @param from        The start date and time of the event.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"     * @param to          The end date and time of the event.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"        super(description);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"        assert from !\u003d null \u0026\u0026 to !\u003d null;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"        this.to \u003d to;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"        this.from \u003d from;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"    @Override","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"                + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \" to: \"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":38}},{"path":"src/main/java/bob/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.task;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import bob.ui.Ui;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":" * An abstraction for the different types of tasks, but is not an abstract class.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"public class Task {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"    protected String description;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"    protected boolean isDone;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"     * Creates a new Task instance","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"     * @param description The description of the task.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"    public Task(String description) {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"        assert description !\u003d null : \"Task must have a description\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"        this.description \u003d description;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"        this.isDone \u003d false;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"     * Returns the status icon of the task depending on whether it","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"     * has been marked done.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"    public String getStatusIcon() {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"     * Marks the task as done and prints to screen, notifying the user.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"    public void markDone() {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"        isDone \u003d true;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"        new Ui().printMarkedTaskDone();","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"     * Marks the task as undone and prints to screen, notifying the user.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"    public void unMarkDone() {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"        isDone \u003d false;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"        new Ui().printMarkedTaskUndone();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gekjunxu"},"content":"    @Override","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gekjunxu"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gekjunxu"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gekjunxu"},"content":"    //...","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false}],"authorContributionMap":{"gekjunxu":54}},{"path":"src/main/java/bob/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.task;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":" * An abstraction for the list of tasks.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"public class TaskList {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"    private ArrayList\u003cTask\u003e tasks;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"     * Creates a new TaskList instance with no tasks.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"    public TaskList() {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"     * Creates a new TaskList instance with the specified tasks.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"     * @param tasks The existing list of tasks.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"        assert tasks !\u003d null : \"A valid ArrayList must be passed in\";","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"        this.tasks \u003d tasks;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"     * Adds tasks to the existing list of tasks.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"     * @param task The new task to be added.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"    public void addTask(Task task) {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"        assert task !\u003d null : \"Task cannot be null\";","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"        this.tasks.add(task);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"     * Deletes tasks from the existing list of tasks.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"     * @param index The index of the task to be deleted","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"    public void deleteTask(int index) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.tasks.size() : \"Task index out of bounds\";","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"        this.tasks.remove(index);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gekjunxu"},"content":"     * Lists out the tasks in the list of tasks.","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gekjunxu"},"content":"    public String listTasks() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gekjunxu"},"content":"        StringBuilder output \u003d new StringBuilder();","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gekjunxu"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gekjunxu"},"content":"            output.append(i + 1).append(\". \").append(this.tasks.get(i).toString()).append(\"\\n\");","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gekjunxu"},"content":"        return output.toString();","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gekjunxu"},"content":"     * Takes in an input sequence and returns a TaskList containing matching","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gekjunxu"},"content":"     * tasks.","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gekjunxu"},"content":"     * @param name To find in description of tasks.","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gekjunxu"},"content":"     * @return TaskList containing the found tasks.","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gekjunxu"},"content":"    public TaskList findTasks(String name) {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gekjunxu"},"content":"        assert name !\u003d null : \"Task name cannot be null\";","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gekjunxu"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gekjunxu"},"content":"        for (Task task : tasks) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gekjunxu"},"content":"            if (task.description.contains(name)) {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gekjunxu"},"content":"                foundTasks.add(task);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gekjunxu"},"content":"            }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gekjunxu"},"content":"        return new TaskList(foundTasks);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gekjunxu"},"content":"     * Returns the number of tasks in the list.","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gekjunxu"},"content":"    public int size() {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gekjunxu"},"content":"        return tasks.size();","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gekjunxu"},"content":"     * Returns true if there are no tasks in the list, false otherwise.","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gekjunxu"},"content":"    public boolean isEmpty() {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gekjunxu"},"content":"        return tasks.isEmpty();","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gekjunxu"},"content":"     * Returns the task object at the specified index.","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gekjunxu"},"content":"     * @param i index of the task.","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gekjunxu"},"content":"    public Task get(int i) {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gekjunxu"},"content":"        return tasks.get(i);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":100}},{"path":"src/main/java/bob/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.task;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":" * Represents a task with a description.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":" * \u003cp\u003e","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":" * Inherits from the Task class.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":" *","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":" * @see bob.task.Task","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"public class Todo extends Task {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"     * Creates a new Todo instance.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"     *","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"     * @param description of the todo task.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"    public Todo(String description) {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"        super(description);","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"    @Override","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"        return \"[T]\" + super.toString();","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":27}},{"path":"src/main/java/bob/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"import javafx.fxml.FXMLLoader;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"import javafx.geometry.Pos;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"import javafx.scene.Node;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"import javafx.scene.image.Image;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"import javafx.scene.image.ImageView;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"import javafx.scene.layout.HBox;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":" * and a label containing text from the speaker.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"public class DialogBox extends HBox {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"    @FXML","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"    private Label dialog;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"    @FXML","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"    private ImageView displayPicture;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"    private DialogBox(String text, Image img) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"        try {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"            fxmlLoader.setController(this);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"            fxmlLoader.setRoot(this);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"            fxmlLoader.load();","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"            e.printStackTrace();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"        dialog.setText(text);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"        displayPicture.setImage(img);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"    private void flip() {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"        Collections.reverse(tmp);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"        getChildren().setAll(tmp);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gekjunxu"},"content":"        setAlignment(Pos.TOP_LEFT);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gekjunxu"},"content":"        dialog.getStyleClass().add(\"reply-label\");","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gekjunxu"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gekjunxu"},"content":"        return new DialogBox(text, img);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gekjunxu"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gekjunxu"},"content":"        var db \u003d new DialogBox(text, img);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gekjunxu"},"content":"        db.flip();","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gekjunxu"},"content":"        return db;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":61}},{"path":"src/main/java/bob/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import javafx.application.Application;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":" * A launcher class to workaround classpath issues.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"public class Launcher {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"    public static void main(String[] args) {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"        Application.launch(Main.class, args);","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":12}},{"path":"src/main/java/bob/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"import bob.Bob;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"import javafx.application.Application;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"import javafx.fxml.FXMLLoader;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"import javafx.scene.Scene;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"import javafx.scene.layout.AnchorPane;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"import javafx.stage.Stage;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":" * A GUI for Bob using FXML.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"public class Main extends Application {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"    private Bob bob \u003d new Bob(\"data/bob.txt\");","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"    @Override","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"    public void start(Stage stage) {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"        try {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"            Scene scene \u003d new Scene(ap);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"            stage.setScene(scene);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"            stage.setTitle(\"Bob the Chat Bot\");","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBob(bob); // inject the Bob instance","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"            // Handle window close event","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"            stage.setOnCloseRequest(event -\u003e {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"                try {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"                    bob.saveTasksToFile(); // Save tasks before closing","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"                } catch (IOException e) {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"                    throw new RuntimeException(e);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"                }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"            });","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"            stage.show();","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"            e.printStackTrace();","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":43}},{"path":"src/main/java/bob/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import bob.Bob;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"import javafx.animation.PauseTransition;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"import javafx.application.Platform;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"import javafx.scene.control.Button;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"import javafx.scene.control.ScrollPane;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"import javafx.scene.control.TextField;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"import javafx.scene.image.Image;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"import javafx.scene.layout.AnchorPane;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"import javafx.scene.layout.VBox;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"import javafx.util.Duration;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":" * Controller for the main GUI.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"public class MainWindow extends AnchorPane {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"    @FXML","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"    private ScrollPane scrollPane;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"    @FXML","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"    private VBox dialogContainer;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"    @FXML","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"    private TextField userInput;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"    @FXML","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"    private Button sendButton;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"    private Bob bob;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"    private Image bobImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"    @FXML","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"    public void initialize() {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"     * Injects the Bob instance","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"    public void setBob(Bob d) {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"        bob \u003d d;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"        String startupMessage \u003d bob.getStartupMessage();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"        // Assisted by ChatGPT","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"        if (!startupMessage.isEmpty()) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gekjunxu"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(startupMessage, bobImage));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gekjunxu"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gekjunxu"},"content":"     * the dialog container. Clears the user input after processing.","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gekjunxu"},"content":"    @FXML","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gekjunxu"},"content":"    private void handleUserInput() {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gekjunxu"},"content":"        String input \u003d userInput.getText();","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gekjunxu"},"content":"        String response \u003d bob.getResponse(input);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gekjunxu"},"content":"        dialogContainer.getChildren().addAll(","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gekjunxu"},"content":"                DialogBox.getUserDialog(input, userImage),","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gekjunxu"},"content":"                DialogBox.getDukeDialog(response, bobImage)","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gekjunxu"},"content":"        );","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gekjunxu"},"content":"        userInput.clear();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gekjunxu"},"content":"        // Check if user input is \"bye\"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gekjunxu"},"content":"        // Assisted by ChatGPT","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gekjunxu"},"content":"        if (input.trim().equalsIgnoreCase(\"bye\")) {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gekjunxu"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(5));","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gekjunxu"},"content":"            delay.setOnFinished(event -\u003e Platform.exit()); // Close after delay","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gekjunxu"},"content":"            delay.play();","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gekjunxu"},"content":"        }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":75}},{"path":"src/main/java/bob/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":" * Handles UI for the chatbot.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"public class Ui {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"     * Creates a new UI instance.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"     * \u003cp\u003e","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"     * Empty constructor for UI.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"    public Ui() {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"        // Empty constructor","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"     * Prints message if data file was not found, notifies user that one","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"     * is created successfully.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"    public String printDatafileNotFoundMessage() {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"        return \"Data file was not found, created one successfully!\\n\";","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"     * Prints hello message.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"    public String printHelloMessage() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"        return \"Hello! I\u0027m Bob\\nWhat can I do for you?\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"     * Prints bye message before chatbot terminates.","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"    public String printByeMessage() {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"        return \"Bob will close in 5 seconds. Hope to see you again soon!\";","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"     * Prints a line of underscores.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"    public String printLine() {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"        return \"\\t____________________________________________________________\";","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"     * Prints message to tell user that below is the tasks in his/her list.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gekjunxu"},"content":"    public String printTaskInListMessage() {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gekjunxu"},"content":"        return \"Here are the tasks in your list:\\n\";","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gekjunxu"},"content":"     * Prints message notifying user that task has been added","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gekjunxu"},"content":"    public String printAddedTaskMessage(String task, int numberOfTasks) {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gekjunxu"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\n\" + printNumOfItemsInList(numberOfTasks);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gekjunxu"},"content":"     * Prints message notifying user that task has been deleted","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gekjunxu"},"content":"    public String printDeletedTaskMessage(int numberOfTasks) {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gekjunxu"},"content":"        return \"Got it. I\u0027ve deleted this task:\\n\" + printNumOfItemsInList(numberOfTasks);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gekjunxu"},"content":"     * Prints message to show the number of tasks present in the list","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gekjunxu"},"content":"    public String printNumOfItemsInList(int size) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gekjunxu"},"content":"        return \"Now you have \" + size + \" tasks in the list.\\n\";","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gekjunxu"},"content":"     * Prints message to notify user there was an error loading the data file.","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gekjunxu"},"content":"    public String showDataFileError() {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gekjunxu"},"content":"        return \"There was an error with loading / saving the data file. Tasks in this session may not be saved.\\n\";","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gekjunxu"},"content":"     * Prints message to notify user task has been marked done.","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gekjunxu"},"content":"    public String printMarkedTaskDone() {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gekjunxu"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\";","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gekjunxu"},"content":"     * Prints message to notify user task has been marked as undone.","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gekjunxu"},"content":"    public String printMarkedTaskUndone() {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gekjunxu"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\";","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gekjunxu"},"content":"    /**","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gekjunxu"},"content":"     * Prints message about the tasks found.","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gekjunxu"},"content":"     */","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gekjunxu"},"content":"    public String printFoundTasks() {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gekjunxu"},"content":"        return \"Here are the matching tasks in your list:\\n\";","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":101}},{"path":"src/main/resources/css/dialog-box.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":".label {","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"    -fx-background-color: linear-gradient(to bottom right, #00ffbf, #00ddff);","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"    -fx-border-color: #d55e00 #009e73 #cc79a7 #0072b2;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"    -fx-border-width: 2px;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"    -fx-background-radius: 1em 1em 0 1em;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"    -fx-border-radius: 1em 1em 0 1em;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":".reply-label {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"    -fx-background-radius: 1em 1em 1em 0;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"    -fx-border-radius: 1em 1em 1em 0;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"#displayPicture {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"    /* Shadow effect on image. */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.2), 10, 0.5, 5, 5);","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"    /* Change size of image. */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"    -fx-scale-x: 1;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"    -fx-scale-y: 1;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"    /* Rotate image clockwise by degrees. */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"    -fx-rotate: 0;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false}],"authorContributionMap":{"gekjunxu":25}},{"path":"src/main/resources/css/main.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":".root {","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"    main-color: rgb(237, 255, 242);       /* Create a looked-up color called \"main-color\" within root. */","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"    -fx-background-color: main-color;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":".text-field {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"    -fx-background-color: #d9ffe2;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"    -fx-font: 20px \"Arial\";","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":".button {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"    -fx-background-color: mediumspringgreen;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"    -fx-font: italic bold 16px \"Arial\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":".button:hover {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"    -fx-background-color:cyan;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"    -fx-font-size: 18px;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":".button:pressed {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"    -fx-background-color:orange;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"    -fx-font-size: 20px;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":".scroll-pane,","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":".scroll-pane .viewport {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"    -fx-background-color: transparent;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":".scroll-bar {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"    -fx-font-size: 10px;  /* Change width of scroll bar. */","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"    -fx-background-color: main-color;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":".scroll-bar .thumb {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"    -fx-background-color: #ff9cb4;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"    -fx-background-radius: 1em;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"/* Hides the increment and decrement buttons. */","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":".scroll-bar .increment-button,","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":".scroll-bar .decrement-button {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"    -fx-pref-height: 0;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"    -fx-opacity: 0;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false}],"authorContributionMap":{"gekjunxu":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"    \u003cchildren\u003e","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"         \u003cpadding\u003e","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"         \u003c/padding\u003e","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"         \u003cHBox.margin\u003e","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"         \u003cHBox.margin\u003e","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"            \u003cInsets /\u003e","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"    \u003c/children\u003e","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"    \u003cpadding\u003e","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"    \u003c/padding\u003e","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"\u003c/fx:root\u003e","isFullCredit":false}],"authorContributionMap":{"gekjunxu":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"\u003c?import javafx.scene.control.Button?\u003e","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bob.ui.MainWindow\"\u003e","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"    \u003cchildren\u003e","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.8571428571428541\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.85714285714289\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"            \u003ccontent\u003e","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"            \u003c/content\u003e","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"        \u003c/ScrollPane\u003e","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"    \u003c/children\u003e","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"\u003c/AnchorPane\u003e","isFullCredit":false}],"authorContributionMap":{"gekjunxu":19}},{"path":"src/test/java/bob/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.command;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"import java.time.LocalDateTime;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"import bob.exception.BobException;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"import bob.task.Deadline;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"import bob.task.Event;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"import bob.task.Task;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"import bob.task.Todo;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"public class ParserTest {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"    @Test","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"    public void parseTask_validTodoTask_success() throws BobException {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"        String input \u003d \"[T][ ] Buy groceries\"; // Valid Todo task","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"        Task task \u003d Parser.parseTask(input); // Parsing the task","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"        assertNotNull(task);","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"        assertInstanceOf(Todo.class, task); // Verify that the parsed task is of type Todo","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(\"Buy groceries\", task.toString().substring(7)); // Ensure the description is correct","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"    @Test","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"    public void parseTask_validDeadlineTask_success() throws BobException {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"        String input \u003d \"[D][ ] Submit assignment (by: 2025-01-31 23:59)\"; // Valid Deadline task","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"        Task task \u003d Parser.parseTask(input); // Parsing the task","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"        assertNotNull(task);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"        assertInstanceOf(Deadline.class, task); // Verify that the parsed task is of type Deadline","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(\"Submit assignment\", task.toString()","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"                .substring(7, task.toString().indexOf(\" (by:\"))); // Ensure the description is correct","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"    @Test","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"    public void parseTask_validEventTask_success() throws BobException {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"        String input \u003d \"[E][ ] Team meeting (from: 2025-01-31 14:00 to: 2025-01-31 16:00)\"; // Valid Event task","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"        Task task \u003d Parser.parseTask(input); // Parsing the task","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"        assertNotNull(task);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gekjunxu"},"content":"        // Verify that the parsed task is of type Event","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gekjunxu"},"content":"        assertInstanceOf(Event.class, task);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gekjunxu"},"content":"        // Ensure the description is correct","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(\"Team meeting\", task.toString().substring(7, task.toString().indexOf(\" (from:\")));","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gekjunxu"},"content":"    @Test","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gekjunxu"},"content":"    void parseTask_invalidTaskType_exceptionThrown() {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gekjunxu"},"content":"        String invalidTaskLine \u003d \"[X][ ] Invalid task type (by: Jan 31 2025 23:59)\";","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gekjunxu"},"content":"        BobException thrown \u003d assertThrows(BobException.class, () -\u003e Parser.parseTask(invalidTaskLine));","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(\"Unknown task type in file: [X][ ] Invalid task type (by: Jan 31 2025 23:59)\",","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gekjunxu"},"content":"                thrown.getMessage());","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gekjunxu"},"content":"    @Test","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gekjunxu"},"content":"    public void parseDate_validDate_success() {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gekjunxu"},"content":"        String validDate \u003d \"2025-01-31\"; // Valid date format (yyyy-MM-dd)","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gekjunxu"},"content":"        LocalDateTime result \u003d Parser.parseDate(validDate); // Parsing the date","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gekjunxu"},"content":"        assertNotNull(result); // Ensure that the result is not null","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(2025, result.getYear()); // Check if the year is correct","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(1, result.getMonthValue()); // Check if the month is correct","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(31, result.getDayOfMonth()); // Check if the day is correct","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gekjunxu"},"content":"    @Test","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gekjunxu"},"content":"    public void parseDate_invalidDate_returnsNull() {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gekjunxu"},"content":"        assertNull(Parser.parseDate(\"*\"));","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gekjunxu"},"content":"        assertNull(Parser.parseDate(\"abc\"));","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gekjunxu"},"content":"        assertNull(Parser.parseDate(\"\"));","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gekjunxu"},"content":"        assertNull(Parser.parseDate(\".\"));","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gekjunxu"},"content":"    @Test","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gekjunxu"},"content":"    public void parseDate_validDateWithTime_success() {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gekjunxu"},"content":"        String validDateWithTime \u003d \"2025-01-31 14:30\"; // Valid date and time format (yyyy-MM-dd HH:mm)","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gekjunxu"},"content":"        LocalDateTime result \u003d Parser.parseDate(validDateWithTime); // Parsing the date with time","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gekjunxu"},"content":"        assertNotNull(result); // Ensure that the result is not null","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(2025, result.getYear()); // Check if the year is correct","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(1, result.getMonthValue()); // Check if the month is correct","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(31, result.getDayOfMonth()); // Check if the day is correct","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(14, result.getHour()); // Check if the hour is correct","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(30, result.getMinute()); // Check if the minute is correct","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":104}},{"path":"src/test/java/bob/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.task;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"import java.time.LocalDateTime;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"public class DeadlineTest {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"    @Test","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"    public void toString_success() {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"        // Test 2 words","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2025, 1, 31, 23, 59);","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"        Deadline deadline \u003d new Deadline(\"Finish project\", dateTime);","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"        String expected \u003d \"[D][ ] Finish project (by: Jan 31 2025 23:59)\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(expected, deadline.toString());","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"        // Test 5 words","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"        LocalDateTime dateTime1 \u003d LocalDateTime.of(2099, 1, 31, 23, 59);","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"        Deadline deadline1 \u003d new Deadline(\"Deadline task with five words\", dateTime1);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"        String expected1 \u003d \"[D][ ] Deadline task with five words (by: Jan 31 2099 23:59)\";","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(expected1, deadline1.toString());","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"    @Test","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"    public void markDone_success() {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2025, 1, 31, 23, 59);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"        Deadline deadline \u003d new Deadline(\"Finish project\", dateTime);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"        // Mark the task as done","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"        deadline.markDone();","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"        String expected \u003d \"[D][X] Finish project (by: Jan 31 2025 23:59)\";","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(expected, deadline.toString());","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"    @Test","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"    public void unMarkDone_success() {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2025, 1, 31, 23, 59);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"        Deadline deadline \u003d new Deadline(\"Finish project\", dateTime);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gekjunxu"},"content":"        deadline.markDone();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gekjunxu"},"content":"        // Unmark the task as done","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gekjunxu"},"content":"        deadline.unMarkDone();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gekjunxu"},"content":"        String expected \u003d \"[D][ ] Finish project (by: Jan 31 2025 23:59)\";","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(expected, deadline.toString());","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":51}},{"path":"src/test/java/bob/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekjunxu"},"content":"package bob.task;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gekjunxu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gekjunxu"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gekjunxu"},"content":"public class TodoTest {","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gekjunxu"},"content":"    @Test","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gekjunxu"},"content":"    public void toString_success() {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gekjunxu"},"content":"        // Task with 1 word prints successfully","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(\"[T][ ] eat\", new Todo(\"eat\").toString());","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"        // Task with 2 words prints successfully","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(\"[T][ ] read book\", new Todo(\"read book\").toString());","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gekjunxu"},"content":"        // Task with special symbols prints successfully","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(\"[T][ ] read book!!!@#$%^\u0026*()\", new Todo(\"read book!!!@#$%^\u0026*()\").toString());","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"        // Task with special symbols prints successfully","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(\"[T][ ] read book!!!@#$%^\u0026*()\", new Todo(\"read book!!!@#$%^\u0026*()\").toString());","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gekjunxu"},"content":"    @Test","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gekjunxu"},"content":"    public void markDone_success() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gekjunxu"},"content":"        Todo todo \u003d new Todo(\"finish homework\");","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gekjunxu"},"content":"        todo.markDone();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(\"[T][X] finish homework\", todo.toString());","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"    @Test","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gekjunxu"},"content":"    public void unMarkDone_success() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"        Todo todo \u003d new Todo(\"finish homework\");","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gekjunxu"},"content":"        todo.markDone();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(\"[T][X] finish homework\", todo.toString());","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gekjunxu"},"content":"        todo.unMarkDone();","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gekjunxu"},"content":"        assertEquals(\"[T][ ] finish homework\", todo.toString());","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gekjunxu"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gekjunxu"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gekjunxu"},"content":"}","isFullCredit":false}],"authorContributionMap":{"gekjunxu":41}},{"path":"docs/Ui.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"gekjunxu":0}},{"path":"gradle/wrapper/gradle-wrapper.jar","fileType":"jar","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/DaDuke.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"gekjunxu":0}},{"path":"src/main/resources/images/DaUser.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"gekjunxu":0}}]
